plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.timegate.aircraft'
version = '1.0-SNAPSHOT'
archivesBaseName = 'KAFKA-speed'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven {
        url 'https://repository.apache.org/content/repositories/snapshots/'
    }
    maven {
        url 'https://repository.apache.org/content/repositories/releases/'
    }
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

// UTF-8 encoding for all Java tasks
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaExec) {
    systemProperty 'file.encoding', 'UTF-8'
}

dependencies {
    // Apache Flink
    implementation 'org.apache.flink:flink-java:1.18.0'
    implementation 'org.apache.flink:flink-streaming-java:1.18.0'
    implementation 'org.apache.flink:flink-clients:1.18.0'
    implementation 'org.apache.flink:flink-connector-kafka:3.0.2-1.18'
    
    // Kafka Client
    implementation 'org.apache.kafka:kafka-clients:3.4.0'
    
    // Jackson for JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    
    // SLF4J and Logback for logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

// JAR build configuration
jar {
    manifest {
        attributes 'Main-Class': 'com.timegate.aircraft.AircraftSpeedJob'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

shadowJar {
    manifest {
        attributes 'Main-Class': 'com.timegate.aircraft.AircraftSpeedJob'
    }
    configurations = [project.configurations.runtimeClasspath]
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
        resource = 'reference.conf'
    }
    
    archiveClassifier.set('')
    archiveVersion.set('')
    zip64 = true
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
